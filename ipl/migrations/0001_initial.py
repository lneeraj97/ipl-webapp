# Generated by Django 2.0.5 on 2018-06-05 05:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerMatchComplete',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(
                    blank=True, db_column='Match_Id', null=True)),
                ('player_id', models.IntegerField(
                    blank=True, db_column='Player_Id', null=True)),
                ('team_id', models.IntegerField(
                    blank=True, db_column='Team_Id', null=True)),
                ('batted', models.IntegerField(
                    blank=True, db_column='Batted', null=True)),
                ('bowls_played', models.FloatField(
                    blank=True, db_column='Bowls_Played', null=True)),
                ('runs', models.FloatField(blank=True, db_column='Runs', null=True)),
                ('fifties', models.FloatField(
                    blank=True, db_column='Fifties', null=True)),
                ('hundreds', models.FloatField(
                    blank=True, db_column='Hundreds', null=True)),
                ('out', models.FloatField(blank=True, db_column='Out', null=True)),
                ('bowled', models.IntegerField(
                    blank=True, db_column='Bowled', null=True)),
                ('wickets', models.FloatField(
                    blank=True, db_column='Wickets', null=True)),
                ('runs_conceded', models.FloatField(
                    blank=True, db_column='Runs_Conceded', null=True)),
                ('overs', models.FloatField(blank=True, db_column='Overs', null=True)),
                ('maiden_overs', models.FloatField(
                    blank=True, db_column='Maiden_Overs', null=True)),
                ('extras', models.FloatField(
                    blank=True, db_column='Extras', null=True)),
                ('wickets_as_fielder', models.IntegerField(
                    blank=True, db_column='Wickets_As_Fielder', null=True)),
                ('match_won', models.IntegerField(
                    blank=True, db_column='Match_Won', null=True)),
            ],
            options={
                'db_table': 'Player_Match_Complete',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerMatchScore',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.FloatField(
                    blank=True, db_column='Match_Id', null=True)),
                ('player_id', models.FloatField(
                    blank=True, db_column='Player_Id', null=True)),
                ('team_id', models.FloatField(
                    blank=True, db_column='Team_Id', null=True)),
                ('is_batsman', models.IntegerField(
                    blank=True, db_column='Is_Batsman', null=True)),
                ('is_bowler', models.IntegerField(
                    blank=True, db_column='Is_Bowler', null=True)),
                ('is_allrounder', models.IntegerField(
                    blank=True, db_column='Is_Allrounder', null=True)),
                ('score', models.FloatField(blank=True, db_column='Score', null=True)),
                ('match_won', models.IntegerField(
                    blank=True, db_column='Match_Won', null=True)),
            ],
            options={
                'db_table': 'Player_Match_Score',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerScore',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField(
                    blank=True, db_column='Player_Id', null=True)),
                ('player_name', models.TextField(
                    blank=True, db_column='Player_Name', null=True)),
                ('total_score', models.FloatField(
                    blank=True, db_column='Total_Score', null=True)),
                ('avg_score', models.FloatField(
                    blank=True, db_column='Avg_Score', null=True)),
                ('success', models.FloatField(
                    blank=True, db_column='Success', null=True)),
                ('type', models.IntegerField(blank=True, db_column='Type', null=True)),
                ('dob', models.TextField(blank=True, db_column='DOB', null=True)),
                ('batting_hand', models.TextField(
                    blank=True, db_column='Batting_Hand', null=True)),
                ('bowling_skill', models.TextField(
                    blank=True, db_column='Bowling_Skill', null=True)),
                ('overseas', models.IntegerField(
                    blank=True, db_column='Overseas', null=True)),
            ],
            options={
                'db_table': 'Player_Score',
                'managed': False,
            },
        ),
    ]
